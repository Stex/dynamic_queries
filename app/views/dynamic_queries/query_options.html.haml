#dynamic_queries
  .page-header
    %h1= dqt('query_options.page_header')
    = render :partial => 'progressbar'
    %pre#generated_sql= @query.valid_sql? ? @query.to_sql : @query.sql_error

  .table-responsive
    %table.table.table-striped.table-bordered.columns-table
      %thead
        %tr
          %th.col-sm-3= dqt('query_options.table.custom_name')
          %th.col-sm-1= change_order_link dqt('query_options.table.select'), 'select'
          %th.col-sm-2= change_order_link dqt('query_options.table.order_by'), 'order_by'
          %th.col-sm-1= dqt('query_options.table.group_by')
          %th.col-sm-2= dqt('query_options.table.aggregate_functions')
          %th.col-sm-3= dqt('query_options.table.conditions')
      %tbody
        - @query.columns.each_with_index do |column, index|
          %tr
            %td= text_field_tag :custom_name, column.custom_name, column_options_data(column, :custom_name, :placeholder => column.output_name, :class => 'form-control input-sm')
            %td{:data => {'column-order' => 'select'}}= check_box_tag :show, '1', column.show?, column_options_data(column, :show)
            - if index.zero?
              = render :partial => 'dynamic_queries/query_options/column_order', :locals => {:order_type => 'select'}
            %td{:data => {'column-order' => 'order_by'}}= select_tag :order_by, sort_directions(column), column_options_data(column, :order_by, :class => 'form-control input-sm')
            - if index.zero?
              = render :partial => 'dynamic_queries/query_options/column_order', :locals => {:order_type => 'order_by'}
            %td= check_box_tag :group_by, '1', column.group_by?, column_options_data(column, :group_by)
            %td= select_tag :aggregate_function, aggregate_function_options(column), column_options_data(column, :aggregate_function, :class => 'form-control input-sm')
            %td{:id => column.dom_id(:conditions)}= render :partial => 'dynamic_queries/query_options/column_conditions', :locals => {:column => column}

        / Condition Arrangement
        %tr
          %th.text-center
            = link_to_function dqt('query_options.save_conditions'),
                               "dynamicQueries.actions.columnOptions.updateConditionOrder('#{dq_url(:update_condition_order, @query)}')",
                               :class => 'btn btn-success btn-lg'
          %td.text-left#condition_order{:colspan => 5}
            %p.text-info= dqt('help.condition_order')

            %h4.fancy{:style => 'margin-top: 30px;'}
              %span= dqt('query_options.connectors_and_parenthesis')

            %ul.list-inline
              %li.order-item.query-column-condition.text-center{:data => {:identifier => '()', :connector => true}}= '( )'
              %li.order-item.query-column-condition.text-center{:data => {:identifier => 'and', :connector => true}}= ' AND '
              %li.order-item.query-column-condition.text-center{:data => {:identifier => 'or', :connector => true}}= ' OR '

            %h4.fancy{:style => 'margin-top: 30px;'}
              %span WHERE

            %ul.list-inline{:data => {:droppable => 'conditions', 'condition-clause' => 'where'}, :style => 'width: 100%; min-height: 30px;'}
              = render :partial => 'dynamic_queries/query_options/condition_order', :locals => {:conditions => @query.where_conditions}
            %p.text-danger{:style => 'display: none', :data => {'condition-clause' => 'where'}}

            %h4.fancy{:style => 'margin-top: 30px;'}
              %span HAVING

            %ul.list-inline{:data => {:droppable => 'conditions', 'condition-clause' => 'having'}, :style => 'width: 100%; min-height: 30px;'}
              = render :partial => 'dynamic_queries/query_options/condition_order', :locals => {:conditions => @query.having_conditions}
            %p.text-danger{:style => 'display: none', :data => {'condition-clause' => 'having'}}


  .preview-box
    %h4= dqt('preview')
    .table-responsive
      %table.table.table-hover.table-striped.table-bordered#query_preview
        = render :partial => 'dynamic_queries/query_options/preview'

  #conditions_modal.modal.fade{:tabindex => '-1', :role => :dialog, 'aria-hidden' => :true}


:javascript
  $(document).ready(function() {
    dynamicQueries.actions.columnOptions.init();
  });